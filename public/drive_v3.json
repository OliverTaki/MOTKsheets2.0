{  "discoveryVersion": "v1",  "rootUrl": "https://www.googleapis.com/",  "description": "The Google Drive API allows clients to access resources from Google Drive.",  "revision": "20250701",  "title": "Google Drive API",  "auth": {    "oauth2": {      "scopes": {        "https://www.googleapis.com/auth/drive": {          "description": "See, edit, create, and delete all of your Google Drive files"        },        "https://www.googleapis.com/auth/drive.appdata": {          "description": "See, create, and delete its own configuration data in your Google Drive"        },        "https://www.googleapis.com/auth/drive.apps.readonly": {          "description": "View your Google Drive apps"        },        "https://www.googleapis.com/auth/drive.file": {          "description": "See, edit, create, and delete only the specific Google Drive files you use with this app"        },        "https://www.googleapis.com/auth/drive.meet.readonly": {          "description": "See and download your Google Drive files that were created or edited by Google Meet."        },        "https://www.googleapis.com/auth/drive.metadata": {          "description": "View and manage metadata of files in your Google Drive"        },        "https://www.googleapis.com/auth/drive.metadata.readonly": {          "description": "See information about your Google Drive files"        },        "https://www.googleapis.com/auth/drive.photos.readonly": {          "description": "View the photos, videos and albums in your Google Photos"        },        "https://www.googleapis.com/auth/drive.readonly": {          "description": "See and download all your Google Drive files"        },        "https://www.googleapis.com/auth/drive.scripts": {          "description": "Modify your Google Apps Script scripts' behavior"        }      }    }  },  "resources": {    "operations": {      "methods": {        "list": {          "id": "drive.operations.list",          "path": "operations",          "flatPath": "operations",          "httpMethod": "GET",          "parameters": {            "name": {              "description": "The name of the operation's parent resource.",              "location": "query",              "type": "string"            },            "filter": {              "description": "The standard list filter.",              "location": "query",              "type": "string"            },            "pageSize": {              "description": "The standard list page size.",              "location": "query",              "type": "integer",              "format": "int32"            },            "pageToken": {              "description": "The standard list page token.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [],          "response": {            "$ref": "ListOperationsResponse"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`."        },        "get": {          "id": "drive.operations.get",          "path": "operations/{name}",          "flatPath": "operations/{name}",          "httpMethod": "GET",          "parameters": {            "name": {              "description": "The name of the operation resource.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "name"          ],          "response": {            "$ref": "Operation"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."        },        "delete": {          "id": "drive.operations.delete",          "path": "operations/{name}",          "flatPath": "operations/{name}",          "httpMethod": "DELETE",          "parameters": {            "name": {              "description": "The name of the operation resource to be deleted.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "name"          ],          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."        },        "cancel": {          "id": "drive.operations.cancel",          "path": "operations/{name}:cancel",          "flatPath": "operations/{name}:cancel",          "httpMethod": "POST",          "parameters": {            "name": {              "description": "The name of the operation resource to be cancelled.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "name"          ],          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of `1`, corresponding to `Code.CANCELLED`."        }      }    },    "about": {      "methods": {        "get": {          "id": "drive.about.get",          "path": "about",          "flatPath": "about",          "httpMethod": "GET",          "parameters": {},          "parameterOrder": [],          "response": {            "$ref": "About"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Gets information about the user, the user's Drive, and system capabilities. For more information, see [Return user info](https://developers.google.com/workspace/drive/api/guides/user-info). Required: The `fields` parameter must be set. To return the exact fields you need, see [Return specific fields](https://developers.google.com/workspace/drive/api/guides/fields-parameter)."        }      }    },    "apps": {      "methods": {        "get": {          "id": "drive.apps.get",          "path": "apps/{appId}",          "flatPath": "apps/{appId}",          "httpMethod": "GET",          "parameters": {            "appId": {              "description": "The ID of the app.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "appId"          ],          "response": {            "$ref": "App"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.apps.readonly",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Gets a specific app. For more information, see [Return user info](https://developers.google.com/workspace/drive/api/guides/user-info)."        },        "list": {          "id": "drive.apps.list",          "path": "apps",          "flatPath": "apps",          "httpMethod": "GET",          "parameters": {            "appFilterExtensions": {              "description": "A comma-separated list of file extensions to limit returned results. All results within the given app query scope which can open any of the given file extensions are included in the response. If `appFilterMimeTypes` are provided as well, the result is a union of the two resulting app lists.",              "default": "",              "location": "query",              "type": "string"            },            "appFilterMimeTypes": {              "description": "A comma-separated list of file extensions to limit returned results. All results within the given app query scope which can open any of the given MIME types will be included in the response. If `appFilterExtensions` are provided as well, the result is a union of the two resulting app lists.",              "default": "",              "location": "query",              "type": "string"            },            "languageCode": {              "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",              "location": "query",              "type": "string"            }          },          "parameterOrder": [],          "response": {            "$ref": "AppList"          },          "scopes": [            "https://www.googleapis.com/auth/drive.apps.readonly"          ],          "description": "Lists a user's installed apps. For more information, see [Return user info](https://developers.google.com/workspace/drive/api/guides/user-info)."        }      }    },    "changes": {      "methods": {        "getStartPageToken": {          "id": "drive.changes.getStartPageToken",          "path": "changes/startPageToken",          "flatPath": "changes/startPageToken",          "httpMethod": "GET",          "parameters": {            "driveId": {              "description": "The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned.",              "location": "query",              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "teamDriveId": {              "description": "Deprecated: Use `driveId` instead.",              "location": "query",              "deprecated": true,              "type": "string"            }          },          "parameterOrder": [],          "response": {            "$ref": "StartPageToken"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Gets the starting pageToken for listing future changes. For more information, see [Retrieve changes](https://developers.google.com/workspace/drive/api/guides/manage-changes)."        },        "list": {          "id": "drive.changes.list",          "path": "changes",          "flatPath": "changes",          "httpMethod": "GET",          "parameters": {            "driveId": {              "description": "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.",              "location": "query",              "type": "string"            },            "includeCorpusRemovals": {              "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",              "default": "false",              "location": "query",              "type": "boolean"            },            "includeItemsFromAllDrives": {              "description": "Whether both My Drive and shared drive items should be included in results.",              "default": "false",              "location": "query",              "type": "boolean"            },            "includeRemoved": {              "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.",              "default": "true",              "location": "query",              "type": "boolean"            },            "includeTeamDriveItems": {              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "pageSize": {              "description": "The maximum number of changes to return per page.",              "default": "100",              "minimum": "1",              "maximum": "1000",              "location": "query",              "type": "integer",              "format": "int32"            },            "pageToken": {              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.",              "location": "query",              "required": true,              "type": "string"            },            "restrictToMyDrive": {              "description": "Whether to restrict the results to changes inside the My Drive hierarchy. This omits changes to files such as those in the Application Data folder or shared files which have not been added to My Drive.",              "default": "false",              "location": "query",              "type": "boolean"            },            "spaces": {              "description": "A comma-separated list of spaces to query within the corpora. Supported values are 'drive' and 'appDataFolder'.",              "default": "drive",              "location": "query",              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "teamDriveId": {              "description": "Deprecated: Use `driveId` instead.",              "location": "query",              "deprecated": true,              "type": "string"            },            "includePermissionsForView": {              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",              "location": "query",              "type": "string"            },            "includeLabels": {              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "pageToken"          ],          "supportsSubscription": true,          "response": {            "$ref": "ChangeList"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Lists the changes for a user or shared drive. For more information, see [Retrieve changes](https://developers.google.com/workspace/drive/api/guides/manage-changes)."        },        "watch": {          "id": "drive.changes.watch",          "path": "changes/watch",          "flatPath": "changes/watch",          "httpMethod": "POST",          "parameters": {            "driveId": {              "description": "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.",              "location": "query",              "type": "string"            },            "includeCorpusRemovals": {              "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",              "default": "false",              "location": "query",              "type": "boolean"            },            "includeItemsFromAllDrives": {              "description": "Whether both My Drive and shared drive items should be included in results.",              "default": "false",              "location": "query",              "type": "boolean"            },            "includeRemoved": {              "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.",              "default": "true",              "location": "query",              "type": "boolean"            },            "includeTeamDriveItems": {              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "pageSize": {              "description": "The maximum number of changes to return per page.",              "default": "100",              "minimum": "1",              "maximum": "1000",              "location": "query",              "type": "integer",              "format": "int32"            },            "pageToken": {              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.",              "location": "query",              "required": true,              "type": "string"            },            "restrictToMyDrive": {              "description": "Whether to restrict the results to changes inside the My Drive hierarchy. This omits changes to files such as those in the Application Data folder or shared files which have not been added to My Drive.",              "default": "false",              "location": "query",              "type": "boolean"            },            "spaces": {              "description": "A comma-separated list of spaces to query within the corpora. Supported values are 'drive' and 'appDataFolder'.",              "default": "drive",              "location": "query",              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "teamDriveId": {              "description": "Deprecated: Use `driveId` instead.",              "location": "query",              "deprecated": true,              "type": "string"            },            "includePermissionsForView": {              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",              "location": "query",              "type": "string"            },            "includeLabels": {              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "pageToken"          ],          "supportsSubscription": true,          "request": {            "parameterName": "resource",            "$ref": "Channel"          },          "response": {            "$ref": "Channel"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Subscribes to changes for a user. For more information, see [Notifications for resource changes](https://developers.google.com/workspace/drive/api/guides/push)."        }      }    },    "channels": {      "methods": {        "stop": {          "id": "drive.channels.stop",          "path": "channels/stop",          "flatPath": "channels/stop",          "httpMethod": "POST",          "parameters": {},          "parameterOrder": [],          "request": {            "parameterName": "resource",            "$ref": "Channel"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Stops watching resources through this channel. For more information, see [Notifications for resource changes](https://developers.google.com/workspace/drive/api/guides/push)."        }      }    },    "comments": {      "methods": {        "create": {          "id": "drive.comments.create",          "path": "files/{fileId}/comments",          "flatPath": "files/{fileId}/comments",          "httpMethod": "POST",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId"          ],          "request": {            "$ref": "Comment"          },          "response": {            "$ref": "Comment"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Creates a comment on a file. For more information, see [Manage comments and replies](https://developers.google.com/workspace/drive/api/guides/manage-comments). Required: The `fields` parameter must be set. To return the exact fields you need, see [Return specific fields](https://developers.google.com/workspace/drive/api/guides/fields-parameter)."        },        "delete": {          "id": "drive.comments.delete",          "path": "files/{fileId}/comments/{commentId}",          "flatPath": "files/{fileId}/comments/{commentId}",          "httpMethod": "DELETE",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "commentId": {              "description": "The ID of the comment.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId",            "commentId"          ],          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Deletes a comment. For more information, see [Manage comments and replies](https://developers.google.com/workspace/drive/api/guides/manage-comments)."        },        "get": {          "id": "drive.comments.get",          "path": "files/{fileId}/comments/{commentId}",          "flatPath": "files/{fileId}/comments/{commentId}",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "commentId": {              "description": "The ID of the comment.",              "location": "path",              "required": true,              "type": "string"            },            "includeDeleted": {              "description": "Whether to return deleted comments. Deleted comments will not include their original content.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "fileId",            "commentId"          ],          "response": {            "$ref": "Comment"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Gets a comment by ID. For more information, see [Manage comments and replies](https://developers.google.com/workspace/drive/api/guides/manage-comments). Required: The `fields` parameter must be set. To return the exact fields you need, see [Return specific fields](https://developers.google.com/workspace/drive/api/guides/fields-parameter)."        },        "list": {          "id": "drive.comments.list",          "path": "files/{fileId}/comments",          "flatPath": "files/{fileId}/comments",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "includeDeleted": {              "description": "Whether to include deleted comments. Deleted comments will not include their original content.",              "default": "false",              "location": "query",              "type": "boolean"            },            "pageSize": {              "description": "The maximum number of comments to return per page.",              "default": "20",              "minimum": "1",              "maximum": "100",              "location": "query",              "type": "integer",              "format": "int32"            },            "pageToken": {              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",              "location": "query",              "type": "string"            },            "startModifiedTime": {              "description": "The minimum value of 'modifiedTime' for the result comments (RFC 3339 date-time).",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "fileId"          ],          "response": {            "$ref": "CommentList"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Lists a file's comments. For more information, see [Manage comments and replies](https://developers.google.com/workspace/drive/api/guides/manage-comments). Required: The `fields` parameter must be set. To return the exact fields you need, see [Return specific fields](https://developers.google.com/workspace/drive/api/guides/fields-parameter)."        },        "update": {          "id": "drive.comments.update",          "path": "files/{fileId}/comments/{commentId}",          "flatPath": "files/{fileId}/comments/{commentId}",          "httpMethod": "PATCH",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "commentId": {              "description": "The ID of the comment.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId",            "commentId"          ],          "request": {            "$ref": "Comment"          },          "response": {            "$ref": "Comment"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Updates a comment with patch semantics. For more information, see [Manage comments and replies](https://developers.google.com/workspace/drive/api/guides/manage-comments). Required: The `fields` parameter must be set. To return the exact fields you need, see [Return specific fields](https://developers.google.com/workspace/drive/api/guides/fields-parameter)."        }      }    },    "drives": {      "methods": {        "create": {          "id": "drive.drives.create",          "path": "drives",          "flatPath": "drives",          "httpMethod": "POST",          "parameters": {            "requestId": {              "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a shared drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same shared drive. If the shared drive already exists a 409 error will be returned.",              "location": "query",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "requestId"          ],          "request": {            "$ref": "Drive"          },          "response": {            "$ref": "Drive"          },          "scopes": [            "https://www.googleapis.com/auth/drive"          ],          "description": "Creates a shared drive."        },        "delete": {          "id": "drive.drives.delete",          "path": "drives/{driveId}",          "flatPath": "drives/{driveId}",          "httpMethod": "DELETE",          "parameters": {            "driveId": {              "description": "The ID of the shared drive.",              "location": "path",              "required": true,              "type": "string"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",              "default": "false",              "location": "query",              "type": "boolean"            },            "allowItemDeletion": {              "description": "Whether any items inside the shared drive should also be deleted. This option is only supported when `useDomainAdminAccess` is also set to `true`.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "driveId"          ],          "scopes": [            "https://www.googleapis.com/auth/drive"          ],          "description": "Permanently deletes a shared drive for which the user is an `organizer`. The shared drive cannot contain any untrashed items."        },        "get": {          "id": "drive.drives.get",          "path": "drives/{driveId}",          "flatPath": "drives/{driveId}",          "httpMethod": "GET",          "parameters": {            "driveId": {              "description": "The ID of the shared drive.",              "location": "path",              "required": true,              "type": "string"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "driveId"          ],          "response": {            "$ref": "Drive"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Gets a shared drive's metadata by ID."        },        "hide": {          "id": "drive.drives.hide",          "path": "drives/{driveId}/hide",          "flatPath": "drives/{driveId}/hide",          "httpMethod": "POST",          "parameters": {            "driveId": {              "description": "The ID of the shared drive.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "driveId"          ],          "response": {            "$ref": "Drive"          },          "scopes": [            "https://www.googleapis.com/auth/drive"          ],          "description": "Hides a shared drive from the default view."        },        "list": {          "id": "drive.drives.list",          "path": "drives",          "flatPath": "drives",          "httpMethod": "GET",          "parameters": {            "pageSize": {              "description": "Maximum number of shared drives to return per page.",              "default": "10",              "minimum": "1",              "maximum": "100",              "location": "query",              "type": "integer",              "format": "int32"            },            "pageToken": {              "description": "Page token for shared drives.",              "location": "query",              "type": "string"            },            "q": {              "description": "Query string for searching shared drives.",              "location": "query",              "type": "string"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then all shared drives of the domain in which the requester is an administrator are returned.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [],          "response": {            "$ref": "DriveList"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": " Lists the user's shared drives. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for shared drives](/workspace/drive/api/guides/search-shareddrives) guide."        },        "unhide": {          "id": "drive.drives.unhide",          "path": "drives/{driveId}/unhide",          "flatPath": "drives/{driveId}/unhide",          "httpMethod": "POST",          "parameters": {            "driveId": {              "description": "The ID of the shared drive.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "driveId"          ],          "response": {            "$ref": "Drive"          },          "scopes": [            "https://www.googleapis.com/auth/drive"          ],          "description": "Restores a shared drive to the default view."        },        "update": {          "id": "drive.drives.update",          "path": "drives/{driveId}",          "flatPath": "drives/{driveId}",          "httpMethod": "PATCH",          "parameters": {            "driveId": {              "description": "The ID of the shared drive.",              "location": "path",              "required": true,              "type": "string"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "driveId"          ],          "request": {            "$ref": "Drive"          },          "response": {            "$ref": "Drive"          },          "scopes": [            "https://www.googleapis.com/auth/drive"          ],          "description": "Updates the metadata for a shared drive."        }      }    },    "files": {      "methods": {        "copy": {          "id": "drive.files.copy",          "path": "files/{fileId}/copy",          "flatPath": "files/{fileId}/copy",          "httpMethod": "POST",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "enforceSingleParent": {              "description": "Deprecated. Copying files into multiple folders is no longer supported. Use shortcuts instead.",              "default": "false",              "location": "query",              "type": "boolean"            },            "ignoreDefaultVisibility": {              "description": "Whether to ignore the domain's default visibility settings for the created file. Domain administrators can choose to make all uploaded files visible to the domain by default; this parameter bypasses that behavior for the request. Permissions are still inherited from parent folders.",              "default": "false",              "location": "query",              "type": "boolean"            },            "keepRevisionForever": {              "description": "Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Google Drive. Only 200 revisions for the file can be kept forever. If the limit is reached, try deleting pinned revisions.",              "default": "false",              "location": "query",              "type": "boolean"            },            "ocrLanguage": {              "description": "A language hint for OCR processing during image import (ISO 639-1 code).",              "location": "query",              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "includePermissionsForView": {              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",              "location": "query",              "type": "string"            },            "includeLabels": {              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "fileId"          ],          "request": {            "$ref": "File"          },          "response": {            "$ref": "File"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.photos.readonly"          ],          "description": "Creates a copy of a file and applies any requested updates with patch semantics."        },        "create": {          "id": "drive.files.create",          "path": "files",          "flatPath": "files",          "httpMethod": "POST",          "parameters": {            "enforceSingleParent": {              "description": "Deprecated. Creating files in multiple folders is no longer supported.",              "default": "false",              "location": "query",              "type": "boolean"            },            "ignoreDefaultVisibility": {              "description": "Whether to ignore the domain's default visibility settings for the created file. Domain administrators can choose to make all uploaded files visible to the domain by default; this parameter bypasses that behavior for the request. Permissions are still inherited from parent folders.",              "default": "false",              "location": "query",              "type": "boolean"            },            "keepRevisionForever": {              "description": "Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Google Drive. Only 200 revisions for the file can be kept forever. If the limit is reached, try deleting pinned revisions.",              "default": "false",              "location": "query",              "type": "boolean"            },            "ocrLanguage": {              "description": "A language hint for OCR processing during image import (ISO 639-1 code).",              "location": "query",              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "useContentAsIndexableText": {              "description": "Whether to use the uploaded content as indexable text.",              "default": "false",              "location": "query",              "type": "boolean"            },            "includePermissionsForView": {              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",              "location": "query",              "type": "string"            },            "includeLabels": {              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [],          "supportsMediaUpload": true,          "mediaUpload": {            "accept": [              "*/*"            ],            "maxSize": "5497558138880",            "protocols": {              "resumable": {                "multipart": true,                "path": "/resumable/upload/drive/v3/files"              },              "simple": {                "multipart": true,                "path": "/upload/drive/v3/files"              }            }          },          "request": {            "$ref": "File"          },          "response": {            "$ref": "File"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file"          ],          "description": " Creates a new file. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/workspace/drive/api/guides/manage-uploads). Apps creating shortcuts with `files.create` must specify the MIME type `application/vnd.google-apps.shortcut`. Apps should specify a file extension in the `name` property when inserting files with the API. For example, an operation to insert a JPEG file should specify something like `\"name\": \"cat.jpg\"` in the metadata. Subsequent `GET` requests include the read-only `fileExtension` property populated with the extension originally specified in the `title` property. When a Google Drive user requests to download a file, or when the file is downloaded through the sync client, Drive builds a full filename (with extension) based on the title. In cases where the extension is missing, Drive attempts to determine the extension based on the file's MIME type."        },        "delete": {          "id": "drive.files.delete",          "path": "files/{fileId}",          "flatPath": "files/{fileId}",          "httpMethod": "DELETE",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "enforceSingleParent": {              "description": "Deprecated: If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item will be placed under its owner's root.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            }          },          "parameterOrder": [            "fileId"          ],          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Permanently deletes a file owned by the user without moving it to the trash. If the file belongs to a shared drive, the user must be an `organizer` on the parent folder. If the target is a folder, all descendants owned by the user are also deleted."        },        "emptyTrash": {          "id": "drive.files.emptyTrash",          "path": "files/trash",          "flatPath": "files/trash",          "httpMethod": "DELETE",          "parameters": {            "enforceSingleParent": {              "description": "Deprecated: If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item will be placed under its owner's root.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "driveId": {              "description": "If set, empties the trash of the provided shared drive.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [],          "scopes": [            "https://www.googleapis.com/auth/drive"          ],          "description": "Permanently deletes all of the user's trashed files."        },        "export": {          "id": "drive.files.export",          "path": "files/{fileId}/export",          "flatPath": "files/{fileId}/export",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "mimeType": {              "description": "Required. The MIME type of the format requested for this export.",              "location": "query",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId",            "mimeType"          ],          "supportsMediaDownload": true,          "useMediaDownloadService": true,          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Exports a Google Workspace document to the requested MIME type and returns exported byte content. Note that the exported content is limited to 10MB."        },        "generateIds": {          "id": "drive.files.generateIds",          "path": "files/generateIds",          "flatPath": "files/generateIds",          "httpMethod": "GET",          "parameters": {            "count": {              "description": "The number of IDs to return.",              "default": "10",              "minimum": "1",              "maximum": "1000",              "location": "query",              "type": "integer",              "format": "int32"            },            "space": {              "description": "The space in which the IDs can be used to create new files. Supported values are 'drive' and 'appDataFolder'. (Default: 'drive')",              "default": "drive",              "location": "query",              "type": "string"            },            "type": {              "description": "The type of items which the IDs can be used for. Supported values are 'files' and 'shortcuts'. Note that 'shortcuts' are only supported in the `drive` 'space'. (Default: 'files')",              "default": "files",              "location": "query",              "type": "string"            }          },          "parameterOrder": [],          "response": {            "$ref": "GeneratedIds"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Generates a set of file IDs which can be provided in create or copy requests."        },        "get": {          "id": "drive.files.get",          "path": "files/{fileId}",          "flatPath": "files/{fileId}",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "acknowledgeAbuse": {              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when the `alt` parameter is set to `media` and the user is the owner of the file or an organizer of the shared drive in which the file resides.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "includePermissionsForView": {              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",              "location": "query",              "type": "string"            },            "includeLabels": {              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "fileId"          ],          "supportsSubscription": true,          "supportsMediaDownload": true,          "useMediaDownloadService": true,          "response": {            "$ref": "File"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": " Gets a file's metadata or content by ID. If you provide the URL parameter `alt=media`, then the response includes the file contents in the response body. Downloading content with `alt=media` only works if the file is stored in Drive. To download Google Docs, Sheets, and Slides use [`files.export`](/workspace/drive/api/reference/rest/v3/files/export) instead. For more information, see [Download & export files](/workspace/drive/api/guides/manage-downloads)."        },        "list": {          "id": "drive.files.list",          "path": "files",          "flatPath": "files",          "httpMethod": "GET",          "parameters": {            "corpora": {              "description": "Bodies of items (files/documents) to which the query applies. Supported bodies are 'user', 'domain', 'drive', and 'allDrives'. Prefer 'user' or 'drive' to 'allDrives' for efficiency. By default, corpora is set to 'user'. However, this can change depending on the filter set through the 'q' parameter.",              "location": "query",              "type": "string"            },            "corpus": {              "description": "Deprecated: The source of files to list. Use 'corpora' instead.",              "location": "query",              "deprecated": true,              "type": "string",              "enumDescriptions": [                "Files shared to the user's domain.",                "Files owned by or shared to the user."              ],              "enum": [                "domain",                "user"              ]            },            "driveId": {              "description": "ID of the shared drive to search.",              "location": "query",              "type": "string"            },            "includeItemsFromAllDrives": {              "description": "Whether both My Drive and shared drive items should be included in results.",              "default": "false",              "location": "query",              "type": "boolean"            },            "includeTeamDriveItems": {              "description": "Deprecated: Use `includeItemsFromAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "orderBy": {              "description": "A comma-separated list of sort keys. Valid keys are: * `createdTime`: When the file was created. * `folder`: The folder ID. This field is sorted using alphabetical ordering. * `modifiedByMeTime`: The last time the file was modified by the user. * `modifiedTime`: The last time the file was modified by anyone. * `name`: The name of the file. This field is sorted using alphabetical ordering, so 1, 12, 2, 22. * `name_natural`: The name of the file. This field is sorted using natural sort ordering, so 1, 2, 12, 22. * `quotaBytesUsed`: The number of storage quota bytes used by the file. * `recency`: The most recent timestamp from the file's date-time fields. * `sharedWithMeTime`: When the file was shared with the user, if applicable. * `starred`: Whether the user has starred the file. * `viewedByMeTime`: The last time the file was viewed by the user. Each key sorts ascending by default, but can be reversed with the 'desc' modifier. Example usage: `?orderBy=folder,modifiedTime desc,name`.",              "location": "query",              "type": "string"            },            "pageSize": {              "description": "The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached.",              "default": "100",              "minimum": "1",              "maximum": "1000",              "location": "query",              "type": "integer",              "format": "int32"            },            "pageToken": {              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",              "location": "query",              "type": "string"            },            "q": {              "description": "A query for filtering the file results. See the \"Search for files & folders\" guide for supported syntax.",              "location": "query",              "type": "string"            },            "spaces": {              "description": "A comma-separated list of spaces to query within the corpora. Supported values are 'drive' and 'appDataFolder'.",              "default": "drive",              "location": "query",              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "teamDriveId": {              "description": "Deprecated: Use `driveId` instead.",              "location": "query",              "deprecated": true,              "type": "string"            },            "includePermissionsForView": {              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",              "location": "query",              "type": "string"            },            "includeLabels": {              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [],          "response": {            "$ref": "FileList"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": " Lists the user's files. This method accepts the `q` parameter, which is a search query combining one or more search terms. For more information, see the [Search for files & folders](/workspace/drive/api/guides/search-files) guide. *Note:* This method returns *all* files by default, including trashed files. If you don't want trashed files to appear in the list, use the `trashed=false` query parameter to remove trashed files from the results."        },        "listLabels": {          "id": "drive.files.listLabels",          "path": "files/{fileId}/listLabels",          "flatPath": "files/{fileId}/listLabels",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "The ID for the file.",              "location": "path",              "required": true,              "type": "string"            },            "maxResults": {              "description": "The maximum number of labels to return per page. When not set, defaults to 100.",              "default": "100",              "minimum": "1",              "maximum": "100",              "location": "query",              "type": "integer",              "format": "int32"            },            "pageToken": {              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "fileId"          ],          "response": {            "$ref": "LabelList"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Lists the labels on a file."        },        "modifyLabels": {          "id": "drive.files.modifyLabels",          "path": "files/{fileId}/modifyLabels",          "flatPath": "files/{fileId}/modifyLabels",          "httpMethod": "POST",          "parameters": {            "fileId": {              "description": "The ID of the file to which the labels belong.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId"          ],          "request": {            "$ref": "ModifyLabelsRequest"          },          "response": {            "$ref": "ModifyLabelsResponse"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.metadata"          ],          "description": "Modifies the set of labels applied to a file. Returns a list of the labels that were added or modified."        },        "update": {          "id": "drive.files.update",          "path": "files/{fileId}",          "flatPath": "files/{fileId}",          "httpMethod": "PATCH",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "addParents": {              "description": "A comma-separated list of parent IDs to add.",              "location": "query",              "type": "string"            },            "enforceSingleParent": {              "description": "Deprecated: Adding files to multiple folders is no longer supported. Use shortcuts instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "keepRevisionForever": {              "description": "Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Google Drive. Only 200 revisions for the file can be kept forever. If the limit is reached, try deleting pinned revisions.",              "default": "false",              "location": "query",              "type": "boolean"            },            "ocrLanguage": {              "description": "A language hint for OCR processing during image import (ISO 639-1 code).",              "location": "query",              "type": "string"            },            "removeParents": {              "description": "A comma-separated list of parent IDs to remove.",              "location": "query",              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "useContentAsIndexableText": {              "description": "Whether to use the uploaded content as indexable text.",              "default": "false",              "location": "query",              "type": "boolean"            },            "includePermissionsForView": {              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",              "location": "query",              "type": "string"            },            "includeLabels": {              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "fileId"          ],          "supportsMediaUpload": true,          "mediaUpload": {            "accept": [              "*/*"            ],            "maxSize": "5497558138880",            "protocols": {              "resumable": {                "multipart": true,                "path": "/resumable/upload/drive/v3/files/{fileId}"              },              "simple": {                "multipart": true,                "path": "/upload/drive/v3/files/{fileId}"              }            }          },          "request": {            "$ref": "File"          },          "response": {            "$ref": "File"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.scripts"          ],          "description": " Updates a file's metadata and/or content. When calling this method, only populate fields in the request that you want to modify. When updating fields, some fields might be changed automatically, such as `modifiedDate`. This method supports patch semantics. This method supports an */upload* URI and accepts uploaded media with the following characteristics: - *Maximum file size:* 5,120 GB - *Accepted Media MIME types:*`*/*` Note: Specify a valid MIME type, rather than the literal `*/*` value. The literal `*/*` is only used to indicate that any valid MIME type can be uploaded. For more information on uploading files, see [Upload file data](/workspace/drive/api/guides/manage-uploads)."        },        "watch": {          "id": "drive.files.watch",          "path": "files/{fileId}/watch",          "flatPath": "files/{fileId}/watch",          "httpMethod": "POST",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "acknowledgeAbuse": {              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when the `alt` parameter is set to `media` and the user is the owner of the file or an organizer of the shared drive in which the file resides.",              "default": "false",              "location": "query",              "type": "boolean"            },            "includePermissionsForView": {              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",              "location": "query",              "type": "string"            },            "includeLabels": {              "description": "A comma-separated list of IDs of labels to include in the `labelInfo` part of the response.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "fileId"          ],          "supportsSubscription": true,          "request": {            "parameterName": "resource",            "$ref": "Channel"          },          "response": {            "$ref": "Channel"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Subscribes to changes to a file."        },        "download": {          "id": "drive.files.download",          "path": "files/{fileId}/download",          "flatPath": "files/{fileId}/download",          "httpMethod": "POST",          "parameters": {            "fileId": {              "description": "Required. The ID of the file to download.",              "location": "path",              "required": true,              "type": "string"            },            "mimeType": {              "description": "Optional. The MIME type the file should be downloaded as. This field can only be set when downloading Google Workspace documents. See [Export MIME types for Google Workspace documents](/drive/api/guides/ref-export-formats) for the list of supported MIME types. If not set, a Google Workspace document is downloaded with a default MIME type. The default MIME type might change in the future.",              "location": "query",              "type": "string"            },            "revisionId": {              "description": "Optional. The revision ID of the file to download. This field can only be set when downloading blob files, Google Docs, and Google Sheets. Returns `INVALID_ARGUMENT` if downloading a specific revision on the file is unsupported.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "fileId"          ],          "response": {            "$ref": "Operation"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Downloads content of a file. Operations are valid for 24 hours from the time of creation."        }      }    },    "permissions": {      "methods": {        "create": {          "id": "drive.permissions.create",          "path": "files/{fileId}/permissions",          "flatPath": "files/{fileId}/permissions",          "httpMethod": "POST",          "parameters": {            "fileId": {              "description": "The ID of the file or shared drive.",              "location": "path",              "required": true,              "type": "string"            },            "emailMessage": {              "description": "A plain text custom message to include in the notification email.",              "location": "query",              "type": "string"            },            "enforceSingleParent": {              "description": "Deprecated: See `moveToNewOwnersRoot` for details.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "moveToNewOwnersRoot": {              "description": "This parameter will only take effect if the item is not in a shared drive and the request is attempting to transfer the ownership of the item. If set to `true`, the item will be moved to the new owner's My Drive root folder and all prior parents removed. If set to `false`, parents are not changed.",              "default": "false",              "location": "query",              "type": "boolean"            },            "sendNotificationEmail": {              "description": "Whether to send a notification email when sharing to users or groups. This defaults to true for users and groups, and is not allowed for other requests. It must not be disabled for ownership transfers.",              "location": "query",              "type": "boolean"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "transferOwnership": {              "description": "Whether to transfer ownership to the specified user and downgrade the current owner to a writer. This parameter is required as an acknowledgement of the side effect.",              "default": "false",              "location": "query",              "type": "boolean"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",              "default": "false",              "location": "query",              "type": "boolean"            },            "enforceExpansiveAccess": {              "description": "Whether the request should enforce expansive access rules.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "fileId"          ],          "request": {            "$ref": "Permission"          },          "response": {            "$ref": "Permission"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Creates a permission for a file or shared drive. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied."        },        "delete": {          "id": "drive.permissions.delete",          "path": "files/{fileId}/permissions/{permissionId}",          "flatPath": "files/{fileId}/permissions/{permissionId}",          "httpMethod": "DELETE",          "parameters": {            "fileId": {              "description": "The ID of the file or shared drive.",              "location": "path",              "required": true,              "type": "string"            },            "permissionId": {              "description": "The ID of the permission.",              "location": "path",              "required": true,              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",              "default": "false",              "location": "query",              "type": "boolean"            },            "enforceExpansiveAccess": {              "description": "Whether the request should enforce expansive access rules.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "fileId",            "permissionId"          ],          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Deletes a permission. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied."        },        "get": {          "id": "drive.permissions.get",          "path": "files/{fileId}/permissions/{permissionId}",          "flatPath": "files/{fileId}/permissions/{permissionId}",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "permissionId": {              "description": "The ID of the permission.",              "location": "path",              "required": true,              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "fileId",            "permissionId"          ],          "response": {            "$ref": "Permission"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Gets a permission by ID."        },        "list": {          "id": "drive.permissions.list",          "path": "files/{fileId}/permissions",          "flatPath": "files/{fileId}/permissions",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "The ID of the file or shared drive.",              "location": "path",              "required": true,              "type": "string"            },            "pageSize": {              "description": "The maximum number of permissions to return per page. When not set for files in a shared drive, at most 100 results will be returned. When not set for files that are not in a shared drive, the entire list will be returned.",              "minimum": "1",              "maximum": "100",              "location": "query",              "type": "integer",              "format": "int32"            },            "pageToken": {              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",              "location": "query",              "type": "string"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",              "default": "false",              "location": "query",              "type": "boolean"            },            "includePermissionsForView": {              "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "fileId"          ],          "response": {            "$ref": "PermissionList"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Lists a file's or shared drive's permissions."        },        "update": {          "id": "drive.permissions.update",          "path": "files/{fileId}/permissions/{permissionId}",          "flatPath": "files/{fileId}/permissions/{permissionId}",          "httpMethod": "PATCH",          "parameters": {            "fileId": {              "description": "The ID of the file or shared drive.",              "location": "path",              "required": true,              "type": "string"            },            "permissionId": {              "description": "The ID of the permission.",              "location": "path",              "required": true,              "type": "string"            },            "removeExpiration": {              "description": "Whether to remove the expiration date.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsAllDrives": {              "description": "Whether the requesting application supports both My Drives and shared drives.",              "default": "false",              "location": "query",              "type": "boolean"            },            "supportsTeamDrives": {              "description": "Deprecated: Use `supportsAllDrives` instead.",              "default": "false",              "location": "query",              "deprecated": true,              "type": "boolean"            },            "transferOwnership": {              "description": "Whether to transfer ownership to the specified user and downgrade the current owner to a writer. This parameter is required as an acknowledgement of the side effect.",              "default": "false",              "location": "query",              "type": "boolean"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",              "default": "false",              "location": "query",              "type": "boolean"            },            "enforceExpansiveAccess": {              "description": "Whether the request should enforce expansive access rules.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "fileId",            "permissionId"          ],          "request": {            "$ref": "Permission"          },          "response": {            "$ref": "Permission"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Updates a permission with patch semantics. **Warning:** Concurrent permissions operations on the same file are not supported; only the last update is applied."        }      }    },    "replies": {      "methods": {        "create": {          "id": "drive.replies.create",          "path": "files/{fileId}/comments/{commentId}/replies",          "flatPath": "files/{fileId}/comments/{commentId}/replies",          "httpMethod": "POST",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "commentId": {              "description": "The ID of the comment.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId",            "commentId"          ],          "request": {            "$ref": "Reply"          },          "response": {            "$ref": "Reply"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Creates a reply to a comment."        },        "delete": {          "id": "drive.replies.delete",          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",          "httpMethod": "DELETE",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "commentId": {              "description": "The ID of the comment.",              "location": "path",              "required": true,              "type": "string"            },            "replyId": {              "description": "The ID of the reply.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId",            "commentId",            "replyId"          ],          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Deletes a reply."        },        "get": {          "id": "drive.replies.get",          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "commentId": {              "description": "The ID of the comment.",              "location": "path",              "required": true,              "type": "string"            },            "replyId": {              "description": "The ID of the reply.",              "location": "path",              "required": true,              "type": "string"            },            "includeDeleted": {              "description": "Whether to return deleted replies. Deleted replies will not include their original content.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "fileId",            "commentId",            "replyId"          ],          "response": {            "$ref": "Reply"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Gets a reply by ID."        },        "list": {          "id": "drive.replies.list",          "path": "files/{fileId}/comments/{commentId}/replies",          "flatPath": "files/{fileId}/comments/{commentId}/replies",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "commentId": {              "description": "The ID of the comment.",              "location": "path",              "required": true,              "type": "string"            },            "includeDeleted": {              "description": "Whether to include deleted replies. Deleted replies will not include their original content.",              "default": "false",              "location": "query",              "type": "boolean"            },            "pageSize": {              "description": "The maximum number of replies to return per page.",              "default": "20",              "minimum": "1",              "maximum": "100",              "location": "query",              "type": "integer",              "format": "int32"            },            "pageToken": {              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "fileId",            "commentId"          ],          "response": {            "$ref": "ReplyList"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Lists a comment's replies."        },        "update": {          "id": "drive.replies.update",          "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",          "flatPath": "files/{fileId}/comments/{commentId}/replies/{replyId}",          "httpMethod": "PATCH",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "commentId": {              "description": "The ID of the comment.",              "location": "path",              "required": true,              "type": "string"            },            "replyId": {              "description": "The ID of the reply.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId",            "commentId",            "replyId"          ],          "request": {            "$ref": "Reply"          },          "response": {            "$ref": "Reply"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Updates a reply with patch semantics."        }      }    },    "revisions": {      "methods": {        "delete": {          "id": "drive.revisions.delete",          "path": "files/{fileId}/revisions/{revisionId}",          "flatPath": "files/{fileId}/revisions/{revisionId}",          "httpMethod": "DELETE",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "revisionId": {              "description": "The ID of the revision.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId",            "revisionId"          ],          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Permanently deletes a file version. You can only delete revisions for files with binary content in Google Drive, like images or videos. Revisions for other files, like Google Docs or Sheets, and the last remaining file version can't be deleted."        },        "get": {          "id": "drive.revisions.get",          "path": "files/{fileId}/revisions/{revisionId}",          "flatPath": "files/{fileId}/revisions/{revisionId}",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "revisionId": {              "description": "The ID of the revision.",              "location": "path",              "required": true,              "type": "string"            },            "acknowledgeAbuse": {              "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when the `alt` parameter is set to `media` and the user is the owner of the file or an organizer of the shared drive in which the file resides.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "fileId",            "revisionId"          ],          "supportsMediaDownload": true,          "useMediaDownloadService": true,          "response": {            "$ref": "Revision"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Gets a revision's metadata or content by ID."        },        "list": {          "id": "drive.revisions.list",          "path": "files/{fileId}/revisions",          "flatPath": "files/{fileId}/revisions",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "pageSize": {              "description": "The maximum number of revisions to return per page.",              "default": "200",              "minimum": "1",              "maximum": "1000",              "location": "query",              "type": "integer",              "format": "int32"            },            "pageToken": {              "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",              "location": "query",              "type": "string"            }          },          "parameterOrder": [            "fileId"          ],          "response": {            "$ref": "RevisionList"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.meet.readonly",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.photos.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Lists a file's revisions."        },        "update": {          "id": "drive.revisions.update",          "path": "files/{fileId}/revisions/{revisionId}",          "flatPath": "files/{fileId}/revisions/{revisionId}",          "httpMethod": "PATCH",          "parameters": {            "fileId": {              "description": "The ID of the file.",              "location": "path",              "required": true,              "type": "string"            },            "revisionId": {              "description": "The ID of the revision.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId",            "revisionId"          ],          "request": {            "$ref": "Revision"          },          "response": {            "$ref": "Revision"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.appdata",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Updates a revision with patch semantics."        }      }    },    "teamdrives": {      "methods": {        "create": {          "id": "drive.teamdrives.create",          "path": "teamdrives",          "flatPath": "teamdrives",          "httpMethod": "POST",          "parameters": {            "requestId": {              "description": "Required. An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a Team Drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same Team Drive. If the Team Drive already exists a 409 error will be returned.",              "location": "query",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "requestId"          ],          "request": {            "$ref": "TeamDrive"          },          "response": {            "$ref": "TeamDrive"          },          "scopes": [            "https://www.googleapis.com/auth/drive"          ],          "description": "Deprecated: Use `drives.create` instead."        },        "delete": {          "id": "drive.teamdrives.delete",          "path": "teamdrives/{teamDriveId}",          "flatPath": "teamdrives/{teamDriveId}",          "httpMethod": "DELETE",          "parameters": {            "teamDriveId": {              "description": "The ID of the Team Drive",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "teamDriveId"          ],          "scopes": [            "https://www.googleapis.com/auth/drive"          ],          "description": "Deprecated: Use `drives.delete` instead."        },        "get": {          "id": "drive.teamdrives.get",          "path": "teamdrives/{teamDriveId}",          "flatPath": "teamdrives/{teamDriveId}",          "httpMethod": "GET",          "parameters": {            "teamDriveId": {              "description": "The ID of the Team Drive",              "location": "path",              "required": true,              "type": "string"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "teamDriveId"          ],          "response": {            "$ref": "TeamDrive"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Deprecated: Use `drives.get` instead."        },        "list": {          "id": "drive.teamdrives.list",          "path": "teamdrives",          "flatPath": "teamdrives",          "httpMethod": "GET",          "parameters": {            "pageSize": {              "description": "Maximum number of Team Drives to return.",              "default": "10",              "minimum": "1",              "maximum": "100",              "location": "query",              "type": "integer",              "format": "int32"            },            "pageToken": {              "description": "Page token for Team Drives.",              "location": "query",              "type": "string"            },            "q": {              "description": "Query string for searching Team Drives.",              "location": "query",              "type": "string"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then all Team Drives of the domain in which the requester is an administrator are returned.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [],          "response": {            "$ref": "TeamDriveList"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Deprecated: Use `drives.list` instead."        },        "update": {          "id": "drive.teamdrives.update",          "path": "teamdrives/{teamDriveId}",          "flatPath": "teamdrives/{teamDriveId}",          "httpMethod": "PATCH",          "parameters": {            "teamDriveId": {              "description": "The ID of the Team Drive",              "location": "path",              "required": true,              "type": "string"            },            "useDomainAdminAccess": {              "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.",              "default": "false",              "location": "query",              "type": "boolean"            }          },          "parameterOrder": [            "teamDriveId"          ],          "request": {            "$ref": "TeamDrive"          },          "response": {            "$ref": "TeamDrive"          },          "scopes": [            "https://www.googleapis.com/auth/drive"          ],          "description": "Deprecated: Use `drives.update` instead."        }      }    },    "accessproposals": {      "methods": {        "get": {          "id": "drive.accessproposals.get",          "path": "files/{fileId}/accessproposals/{proposalId}",          "flatPath": "files/{fileId}/accessproposals/{proposalId}",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "Required. The id of the item the request is on.",              "location": "path",              "required": true,              "type": "string"            },            "proposalId": {              "description": "Required. The id of the access proposal to resolve.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId",            "proposalId"          ],          "response": {            "$ref": "AccessProposal"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "Retrieves an AccessProposal by ID."        },        "resolve": {          "id": "drive.accessproposals.resolve",          "path": "files/{fileId}/accessproposals/{proposalId}:resolve",          "flatPath": "files/{fileId}/accessproposals/{proposalId}:resolve",          "httpMethod": "POST",          "parameters": {            "fileId": {              "description": "Required. The id of the item the request is on.",              "location": "path",              "required": true,              "type": "string"            },            "proposalId": {              "description": "Required. The id of the access proposal to resolve.",              "location": "path",              "required": true,              "type": "string"            }          },          "parameterOrder": [            "fileId",            "proposalId"          ],          "request": {            "$ref": "ResolveAccessProposalRequest"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file"          ],          "description": "Used to approve or deny an Access Proposal."        },        "list": {          "id": "drive.accessproposals.list",          "path": "files/{fileId}/accessproposals",          "flatPath": "files/{fileId}/accessproposals",          "httpMethod": "GET",          "parameters": {            "fileId": {              "description": "Required. The id of the item the request is on.",              "location": "path",              "required": true,              "type": "string"            },            "pageToken": {              "description": "Optional. The continuation token on the list of access requests.",              "location": "query",              "type": "string"            },            "pageSize": {              "description": "Optional. The number of results per page",              "location": "query",              "type": "integer",              "format": "int32"            }          },          "parameterOrder": [            "fileId"          ],          "response": {            "$ref": "ListAccessProposalsResponse"          },          "scopes": [            "https://www.googleapis.com/auth/drive",            "https://www.googleapis.com/auth/drive.file",            "https://www.googleapis.com/auth/drive.metadata",            "https://www.googleapis.com/auth/drive.metadata.readonly",            "https://www.googleapis.com/auth/drive.readonly"          ],          "description": "List the AccessProposals on a file. Note: Only approvers are able to list AccessProposals on a file. If the user is not an approver, returns a 403."        }      }    }  },  "basePath": "/drive/v3/",  "ownerName": "Google",  "ownerDomain": "google.com",  "icons": {    "x16": "http://www.google.com/images/icons/product/search-16.gif",    "x32": "http://www.google.com/images/icons/product/search-32.gif"  },  "kind": "discovery#restDescription",  "batchPath": "batch/drive/v3",  "baseUrl": "https://www.googleapis.com/drive/v3/",  "protocol": "rest",  "servicePath": "drive/v3/",  "name": "drive",  "id": "drive:v3",  "mtlsRootUrl": "https://www.mtls.googleapis.com/",  "schemas": {    "ListOperationsResponse": {      "id": "ListOperationsResponse",      "description": "The response message for Operations.ListOperations.",      "type": "object",      "properties": {        "operations": {          "description": "A list of operations that matches the specified filter in the request.",          "type": "array",          "items": {            "$ref": "Operation"          }        },        "nextPageToken": {          "description": "The standard List next-page token.",          "type": "string"        }      }    },    "Operation": {      "id": "Operation",      "description": "This resource represents a long-running operation that is the result of a network API call.",      "type": "object",      "properties": {        "name": {          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",          "type": "string"        },        "metadata": {          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",          "type": "object",          "additionalProperties": {            "type": "any",            "description": "Properties of the object. Contains field @type with type URL."          }        },        "done": {          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",          "type": "boolean"        },        "error": {          "description": "The error result of the operation in case of failure or cancellation.",          "$ref": "Status"        },        "response": {          "description": "The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",          "type": "object",          "additionalProperties": {            "type": "any",            "description": "Properties of the object. Contains field @type with type URL."          }        }      }    },    "Status": {      "id": "Status",      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",      "type": "object",      "properties": {        "code": {          "description": "The status code, which should be an enum value of google.rpc.Code.",          "type": "integer",          "format": "int32"        },        "message": {          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",          "type": "string"        },        "details": {          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",          "type": "array",          "items": {            "type": "object",            "additionalProperties": {              "type": "any",              "description": "Properties of the object. Contains field @type with type URL."            }          }        }      }    },    "About": {      "id": "About",      "description": "Information about the user, the user's Drive, and system capabilities.",      "type": "object",      "properties": {        "kind": {          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#about\"`.",          "default": "drive#about",          "type": "string"        },        "storageQuota": {          "description": "The user's storage quota limits and usage. For users that are part of an organization with pooled storage, information about the limit and usage across all services is for the organization, rather than the individual user. All fields are measured in bytes.",          "type": "object",          "properties": {            "limit": {              "description": "The usage limit, if applicable. This will not be present if the user has unlimited storage. For users that are part of an organization with pooled storage, this is the limit for the organization, rather than the individual user.",              "type": "string",              "format": "int64"            },            "usageInDrive": {              "description": "The usage by all files in Google Drive.",              "type": "string",              "format": "int64"            },            "usageInDriveTrash": {              "description": "The usage by trashed files in Google Drive.",              "type": "string",              "format": "int64"            },            "usage": {              "description": "The total usage across all services. For users that are part of an organization with pooled storage, this is the usage across all services for the organization, rather than the individual user.",              "type": "string",              "format": "int64"            }          }        },        "driveThemes": {          "description": "A list of themes that are supported for shared drives.",          "type": "array",          "items": {            "type": "object",            "properties": {              "id": {                "description": "The ID of the theme.",                "type": "string"              },              "backgroundImageLink": {                "description": "A link to this theme's background image.",                "type": "string"              },              "colorRgb": {                "description": "The color of this theme as an RGB hex string.",                "type": "string"              }            }          }        },        "canCreateDrives": {          "description": "Whether the user can create shared drives.",          "type": "boolean"        },        "importFormats": {          "description": "A map of source MIME type to possible targets for all supported imports.",          "type": "object",          "additionalProperties": {            "type": "array",            "items": {              "type": "string"            }          }        },        "exportFormats": {          "description": "A map of source MIME type to possible targets for all supported exports.",          "type": "object",          "additionalProperties": {            "type": "array",            "items": {              "type": "string"            }          }        },        "appInstalled": {          "description": "Whether the user has installed the requesting app.",          "type": "boolean"        },        "user": {          "description": "The authenticated user.",          "$ref": "User"        },        "folderColorPalette": {          "description": "The currently supported folder colors as RGB hex strings.",          "type": "array",          "items": {            "type": "string"          }        },        "maxImportSizes": {          "description": "A map of maximum import sizes by MIME type, in bytes.",          "type": "object",          "additionalProperties": {            "type": "string",            "format": "int64"          }        },        "maxUploadSize": {          "description": "The maximum upload size in bytes.",          "type": "string",          "format": "int64"        },        "teamDriveThemes": {          "description": "Deprecated: Use `driveThemes` instead.",          "deprecated": true,          "type": "array",          "items": {            "type": "object",            "properties": {              "id": {                "description": "Deprecated: Use `driveThemes/id` instead.",                "deprecated": true,                "type": "string"              },              "backgroundImageLink": {                "description": "Deprecated: Use `driveThemes/backgroundImageLink` instead.",                "deprecated": true,                "type": "string"              },              "colorRgb": {                "description": "Deprecated: Use `driveThemes/colorRgb` instead.",                "deprecated": true,                "type": "string"              }            }          }        },        "canCreateTeamDrives": {          "description": "Deprecated: Use `canCreateDrives` instead.",          "deprecated": true,          "type": "boolean"        }      }    },    "User": {      "id": "User",      "description": "Information about a Drive user.",      "type": "object",      "properties": {        "displayName": {          "description": "Output only. A plain text displayable name for this user.",          "readOnly": true,          "type": "string"        },        "kind": {          "description": "Output only. Identifies what kind of resource this is. Value: the fixed string `drive#user`.",          "default": "drive#user",          "readOnly": true,          "type": "string"        },        "me": {          "description": "Output only. Whether this user is the requesting user.",          "readOnly": true,          "type": "boolean"        },        "permissionId": {          "description": "Output only. The user's ID as visible in Permission resources.",          "readOnly": true,          "type": "string"        },        "emailAddress": {          "description": "Output only. The email address of the user. This may not be present in certain contexts if the user has not made their email address visible to the requester.",          "readOnly": true,          "type": "string"        },        "photoLink": {          "description": "Output only. A link to the user's profile photo, if available.",          "readOnly": true,          "type": "string"        }      }    },    "App": {      "id": "App",      "description": "The `apps` resource provides a list of apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details. Some resource methods (such as `apps.get`) require an `appId`. Use the `apps.list` method to retrieve the ID for an installed application.",      "type": "object",      "properties": {        "name": {          "description": "The name of the app.",          "type": "string"        },        "objectType": {          "description": "The type of object this app creates such as a Chart. If empty, the app name should be used instead.",          "type": "string"        },        "supportsCreate": {          "description": "Whether this app supports creating objects.",          "type": "boolean"        },        "productUrl": {          "description": "A link to the product listing for this app.",          "type": "string"        },        "primaryMimeTypes": {          "description": "The list of primary MIME types.",          "type": "array",          "items": {            "type": "string"          }        },        "secondaryMimeTypes": {          "description": "The list of secondary MIME types.",          "type": "array",          "items": {            "type": "string"          }        },        "primaryFileExtensions": {          "description": "The list of primary file extensions.",          "type": "array",          "items": {            "type": "string"          }        },        "secondaryFileExtensions": {          "description": "The list of secondary file extensions.",          "type": "array",          "items": {            "type": "string"          }        },        "id": {          "description": "The ID of the app.",          "type": "string"        },        "supportsImport": {          "description": "Whether this app supports importing from Google Docs.",          "type": "boolean"        },        "installed": {          "description": "Whether the app is installed.",          "type": "boolean"        },        "authorized": {          "description": "Whether the app is authorized to access data on the user's Drive.",          "type": "boolean"        },        "icons": {          "description": "The various icons for the app.",          "type": "array",          "items": {            "$ref": "AppIcons"          }        },        "useByDefault": {          "description": "Whether the app is selected as the default handler for the types it supports.",          "type": "boolean"        },        "kind": {          "description": "Output only. Identifies what kind of resource this is. Value: the fixed string \"drive#app\".",          "default": "drive#app",          "type": "string"        },        "shortDescription": {          "description": "A short description of the app.",          "type": "string"        },        "longDescription": {          "description": "A long description of the app.",          "type": "string"        },        "supportsMultiOpen": {          "description": "Whether this app supports opening more than one file.",          "type": "boolean"        },        "productId": {          "description": "The ID of the product listing for this app.",          "type": "string"        },        "openUrlTemplate": {          "description": "The template URL for opening files with this app. The template contains {ids} or {exportIds} to be replaced by the actual file IDs. For more information, see Open Files for the full documentation.",          "type": "string"        },        "createUrl": {          "description": "The URL to create a file with this app.",          "type": "string"        },        "createInFolderTemplate": {          "description": "The template URL to create a file with this app in a given folder. The template contains the {folderId} to be replaced by the folder ID house the new file.",          "type": "string"        },        "supportsOfflineCreate": {          "description": "Whether this app supports creating files when offline.",          "type": "boolean"        },        "hasDriveWideScope": {          "description": "Whether the app has Drive-wide scope. An app with Drive-wide scope can access all files in the user's Drive.",          "type": "boolean"        }      }    },    "AppIcons": {      "id": "AppIcons",      "type": "object",      "properties": {        "size": {          "description": "Size of the icon. Represented as the maximum of the width and height.",          "type": "integer",          "format": "int32"        },        "category": {          "description": "Category of the icon. Allowed values are: * `application` - The icon for the application. * `document` - The icon for a file associated with the app. * `documentShared` - The icon for a shared file associated with the app.",          "type": "string"        },        "iconUrl": {          "description": "URL for the icon.",          "type": "string"        }      }    },    "AppList": {      "id": "AppList",      "description": "A list of third-party applications which the user has installed or given access to Google Drive.",      "type": "object",      "properties": {        "defaultAppIds": {          "description": "The list of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",          "type": "array",          "items": {            "type": "string"          }        },        "kind": {          "description": "Output only. Identifies what kind of resource this is. Value: the fixed string \"drive#appList\".",          "default": "drive#appList",          "type": "string"        },        "selfLink": {          "description": "A link back to this list.",          "type": "string"        },        "items": {          "description": "The list of apps.",          "type": "array",          "items": {            "$ref": "App"          }        }      }    },    "StartPageToken": {      "id": "StartPageToken",      "type": "object",      "properties": {        "startPageToken": {          "description": "The starting page token for listing future changes. The page token doesn't expire.",          "type": "string"        },        "kind": {          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#startPageToken\"`.",          "default": "drive#startPage": "string"        }      }    },    "ChangeList": {      "id": "ChangeList",      "description": "A list of changes for a user.",      "type": "object",      "properties": {        "kind": {          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#changeList\"`.",          "default": "drive#changeList",          "type": "string"        },        "nextPageToken": {          "description": "The page token for the next page of changes. This will be absent if the end of the changes list has been reached. The page token doesn't expire.",          "type": "string"        },        "newStartPageToken": {          "description": "The starting page token for future changes. This will be present only if the end of the current changes list has been reached. The page token doesn't expire.",          "type": "string"        },        "changes": {          "description": "The list of changes. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",          "type": "array",          "items": {            "$ref": "Change"          }        }      }    },    "Change": {      "id": "Change",      "description": "A change to a file or shared drive.",      "type": "object",      "properties": {        "kind": {          "description": "Identifies what kind of resource this is. Value: the fixed string `\"drive#change\"`.",          "default": "drive#change",          "type": "string"        },        "removed": {          "description": "Whether the file or shared drive has been removed from this list of changes, for example by deletion or loss of access.",          "type": "boolean"        },        "file": {          "description": "The updated state of the file. Present if the type is file and the file has not been removed from this list of changes.",          "$ref": "File"        },        "fileId": {          "description": "The ID of the file which has changed.",          "type": "string"        },        "time": {          "description": "The time of this change (RFC 3339 date-time).",          "type": "string",          "format": "date-time"        },        "driveId": {          "description": "The ID of the shared drive associated with this change.",          "type": "string"        },        "type": {          "description": "Deprecated: Use `changeType` instead.",          "deprecated": true,          "type": "string"        },        "teamDriveId": {          "description": "Deprecated: Use `driveId` instead.",          "deprecated": true,          "type": "string"        },        "teamDrive": {          "description": "Deprecated: Use `drive` instead.",          "deprecated": true,          "$ref": "TeamDrive"        },        "changeType": {          "description": "The type of the change. Possible values are `file` and `drive`.",          "type": "string"        },        "drive": {          "description": "The updated state of the shared drive. Present if the changeType is drive, the user is still a member of the shared drive, and the shared drive has not been deleted.",          "$ref": "Drive"        }      }    },    "File": {      "id": "File",      "description": "The metadata for a file. Some resource methods (such as `files.update`) require a `fileId`. Use the `files.list` method to retrieve the ID for a file.",      "type": "object",      "properties": {        "kind": {          "description": "Output only. Identifies what kind of resource this is. Value: the fixed string `\"drive#file\"`.",          "default": "drive#file",          "type": "string"        },        "driveId": {          "description": "Output only. ID of the shared drive the file resides in. Only populated for items in shared drives.",          "type": "string"        },        "fileExtension": {          "description": "Output only. The final component of `fullFileExtension`. This is only available for files with binary content in Google Drive.",          "type": "string"        },        "copyRequiresWriterPermission": {          "description": "Whether the options to copy, print, or download this file, should be disabled for readers and commenters.",          "type": "boolean"        },        "md5Checksum": {          "description": "Output only. The MD5 checksum for the content of the file. This is only applicable to files with binary content in Google Drive.",          "type": "string"        },        "contentHints": {          "description": "Additional information about the content of the file. These fields are never populated in responses.",          "type": "object",          "properties": {            "indexableText": {              "description": "Text to be indexed for the file to improve fullText queries. This is limited to 128KB in length and may contain HTML elements.",              "type": "string"            },            "thumbnail": {              "description": "A thumbnail for the file. This will only be used if Google Drive cannot generate a standard thumbnail.",              "type": "object",              "properties": {                "image": {                  "description": "The thumbnail data encoded with URL-safe Base64. May be `null` if no thumbnail is available."                },                "mimeType": {                  "description": "The MIME type of the thumbnail. May be `null` if no thumbnail is available.",                  "type": "string"                }              }            }          }        },        "createdTime": {          "description": "Output only. The time at which the file was created (RFC 3339 date-time).",          "readOnly": true,          "type": "string",          "format": "date-time"        },        "capabilities": {          "description": "Output only. Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take. For a description of each capability, see [Capabilities](https://developers.google.com/drive/api/guides/capabilities).",          "readOnly": true,          "type": "object",          "properties": {            "canAddChildren": {              "description": "Whether the current user can add children to this folder.",              "type": "boolean"            },            "canChangeCopyRequiresWriterPermission": {              "description": "Whether the current user can change the copyRequiresWriterPermission restriction of this file.",              "type": "boolean"            },            "canChangeViewersCanCopyContent": {              "description": "Whether the current user can change the viewersCanCopyContent restriction of this file.",              "type": "boolean"            },            "canComment": {              "description": "Whether the current user can comment on this file.",              "type": "boolean"            },            "canCopy": {              "description": "Whether the current user can copy this file.",              "type": "boolean"            },            "canDelete": {              "description": "Whether the current user can delete this file.",              "type": "boolean"            },            "canDownload": {              "description": "Whether the current user can download this file.",              "type": "boolean"            },            "canEdit": {              "description": "Whether the current user can edit this file.",              "type": "boolean"            },            "canListChildren": {              "description": "Whether the current user can list the children of this folder.",              "type": "boolean"            },            "canModifyContent": {              "description": "Whether the current user can modify the content of this file.",              "type": "boolean"            },            "canModifyContentRestriction": {              "description": "Whether the current user can modify the content restrictions on this file.",              "type": "boolean"            },            "canMoveChildrenOutOfDrive": {              "description": "Whether the current user can move children out of this shared drive folder.",              "type": "boolean"            },            "canMoveChildrenOutOfTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenOutOfDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveChildrenIntoFolder": {              "description": "Whether the current user can move children into this folder.",              "type": "boolean"            },            "canMoveChildrenIntoDrive": {              "description": "Whether the current user can move children into this shared drive folder.",              "type": "boolean"            },            "canMoveChildrenIntoTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenIntoDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveFileFromDrive": {              "description": "Whether the current user can move this file from a shared drive.",              "type": "boolean"            },            "canMoveFileFromTeamDrive": {              "description": "Deprecated: Use `canMoveFileFromDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemIntoTeamDrive": {              "description": "Deprecated: Use `canMoveItemIntoDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemOutOfTeamDrive": {              "description": "Deprecated: Use `canMoveItemOutOfDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemIntoDrive": {              "description": "Whether the current user can move this file into a shared drive.",              "type": "boolean"            },            "canMoveItemOutOfDrive": {              "description": "Whether the current user can move this file out of a shared drive.",              "type": "boolean"            },            "canMoveItemWithinDrive": {              "description": "Whether the current user can move this file within the shared drive.",              "type": "boolean"            },            "canMoveItemWithinTeamDrive": {              "description": "Deprecated: Use `canMoveItemWithinDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveTeamDriveItem": {              "description": "Deprecated: Use `canMoveItemWithinDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canReadDrive": {              "description": "Whether the current user can read the shared drive where this file is located.",              "type": "boolean"            },            "canReadTeamDrive": {              "description": "Deprecated: Use `canReadDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canReadRevisions": {              "description": "Whether the current user can read revisions of this file.",              "type": "boolean"            },            "canRemoveChildren": {              "description": "Whether the current user can remove children from this folder.",              "type": "boolean"            },            "canRename": {              "description": "Whether the current user can rename this file.",              "type": "boolean"            },            "canShare": {              "description": "Whether the current user can share this file.",              "type": "boolean"            },            "canTrash": {              "description": "Whether the current user can trash this file.",              "type": "boolean"            },            "canUntrash": {              "description": "Whether the current user can untrash this file.",              "type": "boolean"            },            "canDeleteChildren": {              "description": "Whether the current user can delete children of this folder.",              "type": "boolean"            },            "canTrashChildren": {              "description": "Whether the current user can trash children of this folder.",              "type": "boolean"            },            "canAddFolderFromAnotherDrive": {              "description": "Whether the current user can add a folder from another shared drive to this folder.",              "type": "boolean"            },            "canAddShortcut": {              "description": "Whether the current user can add a shortcut to this file in a different folder.",              "type": "boolean"            },            "canChangeSecurityUpdateEnabled": {              "description": "Whether the current user can change the securityUpdateEnabled field on the file.",              "type": "boolean"            },            "canChangeCopyContentRestriction": {              "description": "Whether the current user can change the copyContentRestriction of this file.",              "type": "boolean"            },            "canAcceptOwnership": {              "description": "Whether the current user can accept the ownership of this file.",              "type": "boolean"            },            "canDownloadTeamDriveItem": {              "description": "Deprecated: Use `canDownload` instead.",              "deprecated": true,              "type": "boolean"            },            "canReadTeamDriveItems": {              "description": "Deprecated: Use `canReadDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveTeamDriveItems": {              "description": "Deprecated: Use `canMoveItemWithinDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canChangeDriveMembersOnly": {              "description": "Whether the current user can change the `driveMembersOnly` property of the shared drive.",              "type": "boolean"            },            "canChangeTeamDriveMembersOnly": {              "description": "Deprecated: Use `canChangeDriveMembersOnly` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveDriveItem": {              "description": "Whether the current user can move this file to the trash.",              "type": "boolean"            },            "canMoveTeamDriveItemToTrash": {              "description": "Deprecated: Use `canTrash` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveFileToTrash": {              "description": "Whether the current user can move this file to the trash.",              "type": "boolean"            },            "canMoveFolderToTrash": {              "description": "Whether the current user can move this folder to the trash.",              "type": "boolean"            },            "canMoveItemOutOfTrash": {              "description": "Whether the current user can restore this file from trash.",              "type": "boolean"            },            "canMoveItemIntoTrash": {              "description": "Whether the current user can move this file to the trash.",              "type": "boolean"            },            "canMoveChildrenOutOfTrash": {              "description": "Whether the current user can move children out of trash.",              "type": "boolean"            },            "canMoveChildrenIntoTrash": {              "description": "Whether the current user can move children into trash.",              "type": "boolean"            },            "canMoveChildrenWithinTrash": {              "description": "Whether the current user can move children within trash.",              "type": "boolean"            },            "canMoveItemOutOfAllDrives": {              "description": "Whether the current user can move this file out of all drives.",              "type": "boolean"            },            "canMoveItemIntoAllDrives": {              "description": "Whether the current user can move this file into all drives.",              "type": "boolean"            },            "canMoveChildrenOutOfAllDrives": {              "description": "Whether the current user can move children out of all drives.",              "type": "boolean"            },            "canMoveChildrenIntoAllDrives": {              "description": "Whether the current user can move children into all drives.",              "type": "boolean"            },            "canMoveChildrenWithinAllDrives": {              "description": "Whether the current user can move children within all drives.",              "type": "boolean"            },            "canMoveItemOutOfSharedDrive": {              "description": "Whether the current user can move this file out of the shared drive.",              "type": "boolean"            },            "canMoveItemIntoSharedDrive": {              "description": "Whether the current user can move this file into the shared drive.",              "type": "boolean"            },            "canMoveChildrenOutOfSharedDrive": {              "description": "Whether the current user can move children out of the shared drive.",              "type": "boolean"            },            "canMoveChildrenIntoSharedDrive": {              "description": "Whether the current user can move children into the shared drive.",              "type": "boolean"            },            "canMoveChildrenWithinSharedDrive": {              "description": "Whether the current user can move children within the shared drive.",              "type": "boolean"            },            "canMoveItemOutOfMyDrive": {              "description": "Whether the current user can move this file out of My Drive.",              "type": "boolean"            },            "canMoveItemIntoMyDrive": {              "description": "Whether the current user can move this file into My Drive.",              "type": "boolean"            },            "canMoveChildrenOutOfMyDrive": {              "description": "Whether the current user can move children out of My Drive.",              "type": "boolean"            },            "canMoveChildrenIntoMyDrive": {              "description": "Whether the current user can move children into My Drive.",              "type": "boolean"            },            "canMoveChildrenWithinMyDrive": {              "description": "Whether the current user can move children within My Drive.",              "type": "boolean"            },            "canMoveItemOutOfDomain": {              "description": "Whether the current user can move this file out of the domain.",              "type": "boolean"            },            "canMoveItemIntoDomain": {              "description": "Whether the current user can move this file into the domain.",              "type": "boolean"            },            "canMoveChildrenOutOfDomain": {              "description": "Whether the current user can move children out of the domain.",              "type": "boolean"            },            "canMoveChildrenIntoDomain": {              "description": "Whether the current user can move children into the domain.",              "type": "boolean"            },            "canMoveChildrenWithinDomain": {              "description": "Whether the current user can move children within the domain.",              "type": "boolean"            },            "canMoveItemOutOfCorpus": {              "description": "Whether the current user can move this file out of the corpus.",              "type": "boolean"            },            "canMoveItemIntoCorpus": {              "description": "Whether the current user can move this file into the corpus.",              "type": "boolean"            },            "canMoveChildrenOutOfCorpus": {              "description": "Whether the current user can move children out of the corpus.",              "type": "boolean"            },            "canMoveChildrenIntoCorpus": {              "description": "Whether the current user can move children into the corpus.",              "type": "boolean"            },            "canMoveChildrenWithinCorpus": {              "description": "Whether the current user can move children within the corpus.",              "type": "boolean"            },            "canMoveItemOutOfTeamDrive": {              "description": "Deprecated: Use `canMoveItemOutOfDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemIntoTeamDrive": {              "description": "Deprecated: Use `canMoveItemIntoDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveChildrenOutOfTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenOutOfDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveChildrenIntoTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenIntoDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveChildrenWithinTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenWithinDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemOutOfSharedDrive": {              "description": "Whether the current user can move this file out of the shared drive.",              "type": "boolean"            },            "canMoveItemIntoSharedDrive": {              "description": "Whether the current user can move this file into the shared drive.",              "type": "boolean"            },            "canMoveChildrenOutOfSharedDrive": {              "description": "Whether the current user can move children out of the shared drive.",              "type": "boolean"            },            "canMoveChildrenIntoSharedDrive": {              "description": "Whether the current user can move children into the shared drive.",              "type": "boolean"            },            "canMoveChildrenWithinSharedDrive": {              "description": "Whether the current user can move children within the shared drive.",              "type": "boolean"            },            "canMoveItemOutOfMyDrive": {              "description": "Whether the current user can move this file out of My Drive.",              "type": "boolean"            },            "canMoveItemIntoMyDrive": {              "description": "Whether the current user can move this file into My Drive.",              "type": "boolean"            },            "canMoveChildrenOutOfMyDrive": {              "description": "Whether the current user can move children out of My Drive.",              "type": "boolean"            },            "canMoveChildrenIntoMyDrive": {              "description": "Whether the current user can move children into My Drive.",              "type": "boolean"            },            "canMoveChildrenWithinMyDrive": {              "description": "Whether the current user can move children within My Drive.",              "type": "boolean"            },            "canMoveItemOutOfDomain": {              "description": "Whether the current user can move this file out of the domain.",              "type": "boolean"            },            "canMoveItemIntoDomain": {              "description": "Whether the current user can move this file into the domain.",              "type": "boolean"            },            "canMoveChildrenOutOfDomain": {              "description": "Whether the current user can move children out of the domain.",              "type": "boolean"            },            "canMoveChildrenIntoDomain": {              "description": "Whether the current user can move children into the domain.",              "type": "boolean"            },            "canMoveChildrenWithinDomain": {              "description": "Whether the current user can move children within the domain.",              "type": "boolean"            },            "canMoveItemOutOfCorpus": {              "description": "Whether the current user can move this file out of the corpus.",              "type": "boolean"            },            "canMoveItemIntoCorpus": {              "description": "Whether the current user can move this file into the corpus.",              "type": "boolean"            },            "canMoveChildrenOutOfCorpus": {              "description": "Whether the current user can move children out of the corpus.",              "type": "boolean"            },            "canMoveChildrenIntoCorpus": {              "description": "Whether the current user can move children into the corpus.",              "type": "boolean"            },            "canMoveChildrenWithinCorpus": {              "description": "Whether the current user can move children within the corpus.",              "type": "boolean"            },            "canMoveItemOutOfTeamDrive": {              "description": "Deprecated: Use `canMoveItemOutOfDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemIntoTeamDrive": {              "description": "Deprecated: Use `canMoveItemIntoDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveChildrenOutOfTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenOutOfDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveChildrenIntoTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenIntoDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveChildrenWithinTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenWithinDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemOutOfSharedDrive": {              "description": "Whether the current user can move this file out of the shared drive.",              "type": "boolean"            },            "canMoveItemIntoSharedDrive": {              "description": "Whether the current user can move this file into the shared drive.",              "type": "boolean"            },            "canMoveChildrenOutOfSharedDrive": {              "description": "Whether the current user can move children out of the shared drive.",              "type": "boolean"            },            "canMoveChildrenIntoSharedDrive": {              "description": "Whether the current user can move children into the shared drive.",              "type": "boolean"            },            "canMoveChildrenWithinSharedDrive": {              "description": "Whether the current user can move children within the shared drive.",              "type": "boolean"            },            "canMoveItemOutOfMyDrive": {              "description": "Whether the current user can move this file out of My Drive.",              "type": "boolean"            },            "canMoveItemIntoMyDrive": {              "description": "Whether the current user can move this file into My Drive.",              "type": "boolean"            },            "canMoveChildrenOutOfMyDrive": {              "description": "Whether the current user can move children out of My Drive.",              "type": "boolean"            },            "canMoveChildrenIntoMyDrive": {              "description": "Whether the current user can move children into My Drive.",              "type": "boolean"            },            "canMoveChildrenWithinMyDrive": {              "description": "Whether the current user can move children within My Drive.",              "type": "boolean"            },            "canMoveItemOutOfDomain": {              "description": "Whether the current user can move this file out of the domain.",              "type": "boolean"            },            "canMoveItemIntoDomain": {              "description": "Whether the current user can move this file into the domain.",              "type": "boolean"            },            "canMoveChildrenOutOfDomain": {              "description": "Whether the current user can move children out of the domain.",              "type": "boolean"            },            "canMoveChildrenIntoDomain": {              "description": "Whether the current user can move children into the domain.",              "type": "boolean"            },            "canMoveChildrenWithinDomain": {              "description": "Whether the current user can move children within the domain.",              "type": "boolean"            },            "canMoveItemOutOfCorpus": {              "description": "Whether the current user can move this file out of the corpus.",              "type": "boolean"            },            "canMoveItemIntoCorpus": {              "description": "Whether the current user can move this file into the corpus.",              "type": "boolean"            },            "canMoveChildrenOutOfCorpus": {              "description": "Whether the current user can move children out of the corpus.",              "type": "boolean"            },            "canMoveChildrenIntoCorpus": {              "description": "Whether the current user can move children into the corpus.",              "type": "boolean"            },            "canMoveChildrenWithinCorpus": {              "description": "Whether the current user can move children within the corpus.",              "type": "boolean"            },            "canMoveItemOutOfTeamDrive": {              "description": "Deprecated: Use `canMoveItemOutOfDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemIntoTeamDrive": {              "description": "Deprecated: Use `canMoveItemIntoDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveChildrenOutOfTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenOutOfDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveChildrenIntoTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenIntoDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveChildrenWithinTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenWithinDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemOutOfSharedDrive": {              "description": "Whether the current user can move this file out of the shared drive.",              "type": "boolean"            },            "canMoveItemIntoSharedDrive": {              "description": "Whether the current user can move this file into the shared drive.",              "type": "boolean"            },            "canMoveChildrenOutOfSharedDrive": {              "description": "Whether the current user can move children out of the shared drive.",              "type": "boolean"            },            "canMoveChildrenIntoSharedDrive": {              "description": "Whether the current user can move children into the shared drive.",              "type": "boolean"            },            "canMoveChildrenWithinSharedDrive": {              "description": "Whether the current user can move children within the shared drive.",              "type": "boolean"            },            "canMoveItemOutOfMyDrive": {              "description": "Whether the current user can move this file out of My Drive.",              "type": "boolean"            },            "canMoveItemIntoMyDrive": {              "description": "Whether the current user can move this file into My Drive.",              "type": "boolean"            },            "canMoveChildrenOutOfMyDrive": {              "description": "Whether the current user can move children out of My Drive.",              "type": "boolean"            },            "canMoveChildrenIntoMyDrive": {              "description": "Whether the current user can move children into My Drive.",              "type": "boolean"            },            "canMoveChildrenWithinMyDrive": {              "description": "Whether the current user can move children within My Drive.",              "type": "boolean"            },            "canMoveItemOutOfDomain": {              "description": "Whether the current user can move this file out of the domain.",              "type": "boolean"            },            "canMoveItemIntoDomain": {              "description": "Whether the current user can move this file into the domain.",              "type": "boolean"            },            "canMoveChildrenOutOfDomain": {              "description": "Whether the current user can move children out of the domain.",              "type": "boolean"            },            "canMoveChildrenIntoDomain": {              "description": "Whether the current user can move children into the domain.",              "type": "boolean"            },            "canMoveChildrenWithinDomain": {              "description": "Whether the current user can move children within the domain.",              "type": "boolean"            },            "canMoveItemOutOfCorpus": {              "description": "Whether the current user can move this file out of the corpus.",              "type": "boolean"            },            "canMoveItemIntoCorpus": {              "description": "Whether the current user can move this file into the corpus.",              "type": "boolean"            },            "canMoveChildrenOutOfCorpus": {              "description": "Whether the current user can move children out of the corpus.",              "type": "boolean"            },            "canMoveChildrenIntoCorpus": {              "description": "Whether the current user can move children into the corpus.",              "type": "boolean"            },            "canMoveChildrenWithinCorpus": {              "description": "Whether the current user can move children within the corpus.",              "type": "boolean"            }          }        },        "description": {          "description": "A short description of the file.",          "type": "string"        },        "originalFilename": {          "description": "Output only. The original filename corresponding to the file. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string"        },        "ownedByMe": {          "description": "Output only. Whether the file is owned by the current user.",          "readOnly": true,          "type": "boolean"        },        "fullFileExtension": {          "description": "Output only. The full list of file extensions. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string"        },        "headRevisionId": {          "description": "Output only. The ID of the file's head revision. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string"        },        "folderColorRgb": {          "description": "The color for a folder as an RGB hex string. By default, this is unset. The value of this field is only applicable to folders.",          "type": "string"        },        "shared": {          "description": "Output only. Whether the file has been shared. This field is only populated for items in shared drives.",          "readOnly": true,          "type": "boolean"        },        "sharedWithMeTime": {          "description": "Output only. The time at which the file was shared with the user (RFC 3339 date-time).",          "readOnly": true,          "type": "string",          "format": "date-time"        },        "sharingUser": {          "description": "Output only. The user who shared the file with the requesting user, if applicable.",          "readOnly": true,          "$ref": "User"        },        "thumbnailLink": {          "description": "Output only. A short-lived link to the file's thumbnail, if available. Typically lasts on the order of hours. Only populated when the requesting app has access to the file appropriate for its parent folder(s).",          "readOnly": true,          "type": "string"        },        "thumbnailVersion": {          "description": "Output only. The thumbnail version for the file. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string",          "format": "int64"        },        "viewedByMe": {          "description": "Output only. Whether the file has been viewed by this user.",          "readOnly": true,          "type": "boolean"        },        "viewedByMeTime": {          "description": "Output only. The last time the file was viewed by the user (RFC 3339 date-time).",          "readOnly": true,          "type": "string",          "format": "date-time"        },        "viewersCanCopyContent": {          "description": "Whether users with only view access can copy the content of the file.",          "type": "boolean"        },        "webContentLink": {          "description": "Output only. A link for downloading the content of the file in a browser. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string"        },        "webViewLink": {          "description": "Output only. A link for opening the file in a relevant Google editor or viewer in a browser.",          "readOnly": true,          "type": "string"        },        "writersCanShare": {          "description": "Whether users with only write access can share the file.",          "type": "boolean"        },        "iconLink": {          "description": "Output only. A static, unauthenticated link to the file's icon.",          "readOnly": true,          "type": "string"        },        "isAppAuthorized": {          "description": "Output only. Whether the file was created or opened by the requesting app.",          "readOnly": true,          "type": "boolean"        },        "lastModifyingUser": {          "description": "Output only. The last user to modify the file.",          "readOnly": true,          "$ref": "User"        },        "linkShareMetadata": {          "description": "Output only. Contains details about the link URLs that apply to this file, such as the URL for a link to the file's content, or the URL to open the file in a browser.",          "readOnly": true,          "type": "object",          "properties": {            "securityUpdateEnabled": {              "description": "Whether the file is subject to a security update that affects link-shared files.",              "type": "boolean"            },            "securityUpdateEligible": {              "description": "Whether the file is eligible for a security update that affects link-shared files.",              "type": "boolean"            }          }        },        "mimeType": {          "description": "The MIME type of the file. Google Drive will attempt to automatically detect an appropriate value from uploaded content if no value is provided. The value cannot be changed after creation. For Google Workspace documents, the MIME type is only populated if the file is downloaded or exported.",          "type": "string"        },        "modifiedByMe": {          "description": "Output only. Whether the file has been modified by this user.",          "readOnly": true,          "type": "boolean"        },        "modifiedByMeTime": {          "description": "Output only. The last time the file was modified by the user (RFC 3339 date-time).",          "readOnly": true,          "type": "string",          "format": "date-time"        },        "modifiedTime": {          "description": "Output only. The last time the file was modified by anyone (RFC 3339 date-time).",          "readOnly": true,          "type": "string",          "format": "date-time"        },        "name": {          "description": "The name of the file. This is not necessarily unique within a folder. Note that for Google Workspace documents, the name is only populated if the file is downloaded or exported.",          "type": "string"        },        "parents": {          "description": "The IDs of the file's parents. In most cases, this field is only populated for files that have a single parent. For files with multiple parents, the parents field is only populated if the file is a shortcut. For files that do not have any parents, this field is empty. If a file is moved from one shared drive to another, the parent IDs may change. For more information, see [Move files in shared drives](https://developers.google.com/drive/api/guides/manage-files#move_files_in_shared_drives).",          "type": "array",          "items": {            "type": "string"          }        },        "permissionIds": {          "description": "Output only. The IDs of the set of permissions the user has on this file. Only populated for items in shared drives.",          "readOnly": true,          "type": "array",          "items": {            "type": "string"          }        },        "properties": {          "description": "A collection of arbitrary key-value pairs which are private to the requesting app. Entries with null values are cleared in update requests.",          "type": "object",          "additionalProperties": {            "type": "string"          }        },        "quotaBytesUsed": {          "description": "Output only. The amount of storage quota consumed by the file in bytes. This is only applicable to files with binary content in Google Drive.",          "readOnly": true,          "type": "string",          "format": "int64"        },        "explicitlyTrashed": {          "description": "Output only. Whether the file has been explicitly trashed, as opposed to recursively trashed from a parent folder.",          "readOnly": true,          "type": "boolean"        },        "spaces": {          "description": "Output only. The list of spaces which contain the file. Supported values are 'drive', 'appDataFolder' and 'photos'.",          "readOnly": true,          "type": "array",          "items": {            "type": "string"          }        },        "starred": {          "description": "Whether the user has starred the file.",          "type": "boolean"        },        "trashed": {          "description": "Whether the file has been trashed, either explicitly or from a trashed parent folder. Only the owner may trash a file. If the file is shared with the user, the file can only be trashed by the owner.",          "type": "boolean"        },        "trashedTime": {          "description": "Output only. The time at which the file was trashed (RFC 3339 date-time).",          "readOnly": true,          "type": "string",          "format": "date-time"        },        "trashingUser": {          "description": "Output only. If the file has been trashed, the user who trashed the file.",          "readOnly": true,          "$ref": "User"        },        "version": {          "description": "Output only. A monotonically increasing version number for the file. This reflects every change made to the file throughout its life. The version number is only increased when the file's content or metadata is modified.",          "readOnly": true,          "type": "string",          "format": "int64"        },        "videoMediaMetadata": {          "description": "Output only. Additional metadata about video media. This is only available for files with video content in Google Drive.",          "readOnly": true,          "type": "object",          "properties": {            "width": {              "description": "The width of the video in pixels.",              "type": "integer",              "format": "int32"            },            "height": {              "description": "The height of the video in pixels.",              "type": "integer",              "format": "int32"            },            "durationMillis": {              "description": "The duration of the video in milliseconds.",              "type": "string",              "format": "int64"            }          }        },        "webContentLink": {          "description": "Output only. A link for downloading the content of the file in a browser. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string"        },        "webViewLink": {          "description": "Output only. A link for opening the file in a relevant Google editor or viewer in a browser.",          "readOnly": true,          "type": "string"        },        "writersCanShare": {          "description": "Whether users with only write access can share the file.",          "type": "boolean"        },        "capabilities": {          "description": "Output only. Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take. For a description of each capability, see [Capabilities](https://developers.google.com/drive/api/guides/capabilities).",          "readOnly": true,          "type": "object",          "properties": {            "canAddChildren": {              "description": "Whether the current user can add children to this folder.",              "type": "boolean"            },            "canChangeCopyRequiresWriterPermission": {              "description": "Whether the current user can change the copyRequiresWriterPermission restriction of this file.",              "type": "boolean"            },            "canChangeViewersCanCopyContent": {              "description": "Whether the current user can change the viewersCanCopyContent restriction of this file.",              "type": "boolean"            },            "canComment": {              "description": "Whether the current user can comment on this file.",              "type": "boolean"            },            "canCopy": {              "description": "Whether the current user can copy this file.",              "type": "boolean"            },            "canDelete": {              "description": "Whether the current user can delete this file.",              "type": "boolean"            },            "canDownload": {              "description": "Whether the current user can download this file.",              "type": "boolean"            },            "canEdit": {              "description": "Whether the current user can edit this file.",              "type": "boolean"            },            "canListChildren": {              "description": "Whether the current user can list the children of this folder.",              "type": "boolean"            },            "canModifyContent": {              "description": "Whether the current user can modify the content of this file.",              "type": "boolean"            },            "canModifyContentRestriction": {              "description": "Whether the current user can modify the content restrictions on this file.",              "type": "boolean"            },            "canMoveChildrenOutOfDrive": {              "description": "Whether the current user can move children out of this shared drive folder.",              "type": "boolean"            },            "canMoveChildrenOutOfTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenOutOfDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveChildrenIntoFolder": {              "description": "Whether the current user can move children into this folder.",              "type": "boolean"            },            "canMoveChildrenIntoDrive": {              "description": "Whether the current user can move children into this shared drive folder.",              "type": "boolean"            },            "canMoveChildrenIntoTeamDrive": {              "description": "Deprecated: Use `canMoveChildrenIntoDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveFileFromDrive": {              "description": "Whether the current user can move this file from a shared drive.",              "type": "boolean"            },            "canMoveFileFromTeamDrive": {              "description": "Deprecated: Use `canMoveFileFromDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemIntoTeamDrive": {              "description": "Deprecated: Use `canMoveItemIntoDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemOutOfTeamDrive": {              "description": "Deprecated: Use `canMoveItemOutOfDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveItemIntoDrive": {              "description": "Whether the current user can move this file into a shared drive.",              "type": "boolean"            },            "canMoveItemOutOfDrive": {              "description": "Whether the current user can move this file out of a shared drive.",              "type": "boolean"            },            "canMoveItemWithinDrive": {              "description": "Whether the current user can move this file within the shared drive.",              "type": "boolean"            },            "canMoveItemWithinTeamDrive": {              "description": "Deprecated: Use `canMoveItemWithinDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveTeamDriveItem": {              "description": "Deprecated: Use `canMoveItemWithinDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canReadDrive": {              "description": "Whether the current user can read the shared drive where this file is located.",              "type": "boolean"            },            "canReadTeamDrive": {              "description": "Deprecated: Use `canReadDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canReadRevisions": {              "description": "Whether the current user can read revisions of this file.",              "type": "boolean"            },            "canRemoveChildren": {              "description": "Whether the current user can remove children from this folder.",              "type": "boolean"            },            "canRename": {              "description": "Whether the current user can rename this file.",              "type": "boolean"            },            "canShare": {              "description": "Whether the current user can share this file.",              "type": "boolean"            },            "canTrash": {              "description": "Whether the current user can trash this file.",              "type": "boolean"            },            "canUntrash": {              "description": "Whether the current user can untrash this file.",              "type": "boolean"            },            "canDeleteChildren": {              "description": "Whether the current user can delete children of this folder.",              "type": "boolean"            },            "canTrashChildren": {              "description": "Whether the current user can trash children of this folder.",              "type": "boolean"            },            "canAddFolderFromAnotherDrive": {              "description": "Whether the current user can add a folder from another shared drive to this folder.",              "type": "boolean"            },            "canAddShortcut": {              "description": "Whether the current user can add a shortcut to this file in a different folder.",              "type": "boolean"            },            "canChangeSecurityUpdateEnabled": {              "description": "Whether the current user can change the securityUpdateEnabled field on the file.",              "type": "boolean"            },            "canChangeCopyContentRestriction": {              "description": "Whether the current user can change the copyContentRestriction of this file.",              "type": "boolean"            },            "canAcceptOwnership": {              "description": "Whether the current user can accept the ownership of this file.",              "type": "boolean"            },            "canDownloadTeamDriveItem": {              "description": "Deprecated: Use `canDownload` instead.",              "deprecated": true,              "type": "boolean"            },            "canReadTeamDriveItems": {              "description": "Deprecated: Use `canReadDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveTeamDriveItems": {              "description": "Deprecated: Use `canMoveItemWithinDrive` instead.",              "deprecated": true,              "type": "boolean"            },            "canChangeDriveMembersOnly": {              "description": "Whether the current user can change the `driveMembersOnly` property of the shared drive.",              "type": "boolean"            },            "canChangeTeamDriveMembersOnly": {              "description": "Deprecated: Use `canChangeDriveMembersOnly` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveDriveItem": {              "description": "Whether the current user can move this file to the trash.",              "type": "boolean"            },            "canMoveTeamDriveItemToTrash": {              "description": "Deprecated: Use `canTrash` instead.",              "deprecated": true,              "type": "boolean"            },            "canMoveFileToTrash": {              "description": "Whether the current user can move this file to the trash.",              "type": "boolean"            },            "canMoveFolderToTrash": {              "description": "Whether the current user can move this folder to the trash.",              "type": "boolean"            },            "canMoveItemOutOfTrash": {              "description": "Whether the current user can restore this file from trash.",              "type": "boolean"            },            "canMoveItemIntoTrash": {              "description": "Whether the current user can move this file to the trash.",              "type": "boolean"            },            "canMoveChildrenOutOfTrash": {              "description": "Whether the current user can move children out of trash.",              "type": "boolean"            },            "canMoveChildrenIntoTrash": {              "description": "Whether the current user can move children into trash.",              "type": "boolean"            },            "canMoveChildrenWithinTrash": {              "description": "Whether the current user can move children within trash.",              "type": "boolean"            },            "canMoveItemOutOfAllDrives": {              "description": "Whether the current user can move this file out of all drives.",              "type": "boolean"            },            "canMoveItemIntoAllDrives": {              "description": "Whether the current user can move this file into all drives.",              "type": "boolean"            },            "canMoveChildrenOutOfAllDrives": {              "description": "Whether the current user can move children out of all drives.",              "type": "boolean"            },            "canMoveChildrenIntoAllDrives": {              "description": "Whether the current user can move children into all drives.",              "type": "boolean"            },            "canMoveChildrenWithinAllDrives": {              "description": "Whether the current user can move children within all drives.",              "type": "boolean"            },            "canMoveItemOutOfSharedDrive": {              "description": "Whether the current user can move this file out of the shared drive.",              "type": "boolean"            },            "canMoveItemIntoSharedDrive": {              "description": "Whether the current user can move this file into the shared drive.",              "type": "boolean"            },            "canMoveChildrenOutOfSharedDrive": {              "description": "Whether the current user can move children out of the shared drive.",              "type": "boolean"            },            "canMoveChildrenIntoSharedDrive": {              "description": "Whether the current user can move children into the shared drive.",              "type": "boolean"            },            "canMoveChildrenWithinSharedDrive": {              "description": "Whether the current user can move children within the shared drive.",              "type": "boolean"            },            "canMoveItemOutOfMyDrive": {              "description": "Whether the current user can move this file out of My Drive.",              "type": "boolean"            },            "canMoveItemIntoMyDrive": {              "description": "Whether the current user can move this file into My Drive.",              "type": "boolean"            },            "canMoveChildrenOutOfMyDrive": {              "description": "Whether the current user can move children out of My Drive.",              "type": "boolean"            },            "canMoveChildrenIntoMyDrive": {              "description": "Whether the current user can move children into My Drive.",              "type": "boolean"            },            "canMoveChildrenWithinMyDrive": {              "description": "Whether the current user can move children within My Drive.",              "type": "boolean"            },            "canMoveItemOutOfDomain": {              "description": "Whether the current user can move this file out of the domain.",              "type": "boolean"            },            "canMoveItemIntoDomain": {              "description": "Whether the current user can move this file into the domain.",              "type": "boolean"            },            "canMoveChildrenOutOfDomain": {              "description": "Whether the current user can move children out of the domain.",              "type": "boolean"            },            "canMoveChildrenIntoDomain": {              "description": "Whether the current user can move children into the domain.",              "type": "boolean"            },            "canMoveChildrenWithinDomain": {              "description": "Whether the current user can move children within the domain.",              "type": "boolean"            },            "canMoveItemOutOfCorpus": {              "description": "Whether the current user can move this file out of the corpus.",              "type": "boolean"            },            "canMoveItemIntoCorpus": {              "description": "Whether the current user can move this file into the corpus.",              "type": "boolean"            },            "canMoveChildrenOutOfCorpus": {              "description": "Whether the current user can move children out of the corpus.",              "type": "boolean"            },            "canMoveChildrenIntoCorpus": {              "description": "Whether the current user can move children into the corpus.",              "type": "boolean"            },            "canMoveChildrenWithinCorpus": {              "description": "Whether the current user can move children within the corpus.",              "type": "boolean"            }          }        },        "description": {          "description": "A short description of the file.",          "type": "string"        },        "originalFilename": {          "description": "Output only. The original filename corresponding to the file. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string"        },        "ownedByMe": {          "description": "Output only. Whether the file is owned by the current user.",          "readOnly": true,          "type": "boolean"        },        "fullFileExtension": {          "description": "Output only. The full list of file extensions. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string"        },        "headRevisionId": {          "description": "Output only. The ID of the file's head revision. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string"        },        "folderColorRgb": {          "description": "The color for a folder as an RGB hex string. By default, this is unset. The value of this field is only applicable to folders.",          "type": "string"        },        "shared": {          "description": "Output only. Whether the file has been shared. This field is only populated for items in shared drives.",          "readOnly": true,          "type": "boolean"        },        "sharedWithMeTime": {          "description": "Output only. The time at which the file was shared with the user (RFC 3339 date-time).",          "readOnly": true,          "type": "string",          "format": "date-time"        },        "sharingUser": {          "description": "Output only. The user who shared the file with the requesting user, if applicable.",          "readOnly": true,          "$ref": "User"        },        "thumbnailLink": {          "description": "Output only. A short-lived link to the file's thumbnail, if available. Typically lasts on the order of hours. Only populated when the requesting app has access to the file appropriate for its parent folder(s).",          "readOnly": true,          "type": "string"        },        "thumbnailVersion": {          "description": "Output only. The thumbnail version for the file. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string",          "format": "int64"        },        "viewedByMe": {          "description": "Output only. Whether the file has been viewed by this user.",          "readOnly": true,          "type": "boolean"        },        "viewedByMeTime": {          "description": "Output only. The last time the file was viewed by the user (RFC 3339 date-time).",          "readOnly": true,          "type": "string",          "format": "date-time"        },        "viewersCanCopyContent": {          "description": "Whether users with only view access can copy the content of the file.",          "type": "boolean"        },        "webContentLink": {          "description": "Output only. A link for downloading the content of the file in a browser. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string"        },        "webViewLink": {          "description": "Output only. A link for opening the file in a relevant Google editor or viewer in a browser.",          "readOnly": true,          "type": "string"        },        "writersCanShare": {          "description": "Whether users with only write access can share the file.",          "type": "boolean"        },        "iconLink": {          "description": "Output only. A static, unauthenticated link to the file's icon.",          "readOnly": true,          "type": "string"        },        "isAppAuthorized": {          "description": "Output only. Whether the file was created or opened by the requesting app.",          "readOnly": true,          "type": "boolean"        },        "lastModifyingUser": {          "description": "Output only. The last user to modify the file.",          "readOnly": true,          "$ref": "User"        },        "linkShareMetadata": {          "description": "Output only. Contains details about the link URLs that apply to this file, such as the URL for a link to the file's content, or the URL to open the file in a browser.",          "readOnly": true,          "type": "object",          "properties": {            "securityUpdateEnabled": {              "description": "Whether the file is subject to a security update that affects link-shared files.",              "type": "boolean"            },            "securityUpdateEligible": {              "description": "Whether the file is eligible for a security update that affects link-shared files.",              "type": "boolean"            }          }        },        "mimeType": {          "description": "The MIME type of the file. Google Drive will attempt to automatically detect an appropriate value from uploaded content if no value is provided. The value cannot be changed after creation. For Google Workspace documents, the MIME type is only populated if the file is downloaded or exported.",          "type": "string"        },        "modifiedByMe": {          "description": "Output only. Whether the file has been modified by this user.",          "readOnly": true,          "type": "boolean"        },        "modifiedByMeTime": {          "description": "Output only. The last time the file was modified by the user (RFC 3339 date-time).",          "readOnly": true,          "type": "string",          "format": "date-time"        },        "modifiedTime": {          "description": "Output only. The last time the file was modified by anyone (RFC 3339 date-time).",          "readOnly": true,          "type": "string",          "format": "date-time"        },        "name": {          "description": "The name of the file. This is not necessarily unique within a folder. Note that for Google Workspace documents, the name is only populated if the file is downloaded or exported.",          "type": "string"        },        "parents": {          "description": "The IDs of the file's parents. In most cases, this field is only populated for files that have a single parent. For files with multiple parents, the parents field is only populated if the file is a shortcut. For files that do not have any parents, this field is empty. If a file is moved from one shared drive to another, the parent IDs may change. For more information, see [Move files in shared drives](https://developers.google.com/drive/api/guides/manage-files#move_files_in_shared_drives).",          "type": "array",          "items": {            "type": "string"          }        },        "permissionIds": {          "description": "Output only. The IDs of the set of permissions the user has on this file. Only populated for items in shared drives.",          "readOnly": true,          "type": "array",          "items": {            "type": "string"          }        },        "properties": {          "description": "A collection of arbitrary key-value pairs which are private to the requesting app. Entries with null values are cleared in update requests.",          "type": "object",          "additionalProperties": {            "type": "string"          }        },        "quotaBytesUsed": {          "description": "Output only. The amount of storage quota consumed by the file in bytes. This is only applicable to files with binary content in Google Drive.",          "readOnly": true,          "type": "string",          "format": "int64"        },        "explicitlyTrashed": {          "description": "Output only. Whether the file has been explicitly trashed, as opposed to recursively trashed from a parent folder.",          "readOnly": true,          "type": "boolean"        },        "spaces": {          "description": "Output only. The list of spaces which contain the file. Supported values are 'drive', 'appDataFolder' and 'photos'.",          "readOnly": true,          "type": "array",          "items": {            "type": "string"          }        },        "starred": {          "description": "Whether the user has starred the file.",          "type": "boolean"        },        "trashed": {          "description": "Whether the file has been trashed, either explicitly or from a trashed parent folder. Only the owner may trash a file. If the file is shared with the user, the file can only be trashed by the owner.",          "type": "boolean"        },        "trashedTime": {          "description": "Output only. The time at which the file was trashed (RFC 3339 date-time).",          "readOnly": true,          "type": "string",          "format": "date-time"        },        "trashingUser": {          "description": "Output only. If the file has been trashed, the user who trashed the file.",          "readOnly": true,          "$ref": "User"        },        "version": {          "description": "Output only. A monotonically increasing version number for the file. This reflects every change made to the file throughout its life. The version number is only increased when the file's content or metadata is modified.",          "readOnly": true,          "type": "string",          "format": "int64"        },        "videoMediaMetadata": {          "description": "Output only. Additional metadata about video media. This is only available for files with video content in Google Drive.",          "readOnly": true,          "type": "object",          "properties": {            "width": {              "description": "The width of the video in pixels.",              "type": "integer",              "format": "int32"            },            "height": {              "description": "The height of the video in pixels.",              "type": "integer",              "format": "int32"            },            "durationMillis": {              "description": "The duration of the video in milliseconds.",              "type": "string",              "format": "int64"            }          }        },        "webContentLink": {          "description": "Output only. A link for downloading the content of the file in a browser. This is only available for files with binary content in Google Drive.",          "readOnly": true,          "type": "string"        },        "webViewLink": {          "description": "Output only. A link for opening the file in a relevant Google editor or viewer in a browser.",          "readOnly": true,          "type": "string"        },        "writersCanShare": {          "description": "Whether users with only write access can share the file.",          "type": "boolean"        }      }    }  }}